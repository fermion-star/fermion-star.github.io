function updateStatusBar(e){document.getElementById("status-bar").innerText="Status: "+e}function enterDrawingMode(){canvas.selection=!1,canvas.forEachObject(function(e){e.selectable=!1}),isDrawing=!0,isSelecting=!1,updateStatusBar("Drawing")}function exitDrawingMode(){isDrawing=!1,updateStatusBar("Idle"),canvas.selection=!0,canvas.forEachObject(function(e){e.selectable=!0})}function enterSelectionMode(){isSelecting=!0,updateStatusBar("Selecting")}function isIntersect(e,t){return e[0]<t[2]&&e[2]>t[0]&&e[1]<t[3]&&e[3]>t[1]}function anyIntersect(e){for(let t=0;t<e.length;t++)for(let n=t+1;n<e.length;n++)if(isIntersect(e[t],e[n]))return!0;return!1}function checkIntersectBoundary(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(!(t[0]<=a[0]&&t[1]<=a[1]&&a[2]<=t[2]&&a[3]<=t[3]))return!0}return!1}function test_intersect(){let e=[];return canvas.forEachObject(function(t){"rect"===t.type&&e.push([t.left,t.top,t.left+t.width,t.top+t.height])}),console.log("Rects intersect?",anyIntersect(e)),console.log("Rects out of canvas?",checkIntersectBoundary(e,[0,0,canvas.width,canvas.height])),anyIntersect(e)||checkIntersectBoundary(e,[0,0,canvas.width,canvas.height])}function normalizeRect(e){e.width<0&&(e.left+=e.width,e.width*=-1),e.height<0&&(e.top+=e.height,e.height*=-1),ROUND_ALL&&(e.width=Math.round(e.width),e.height=Math.round(e.height),e.left=Math.round(e.left),e.top=Math.round(e.top)),console.log(e)}var canvas=new fabric.Canvas("canvas");canvas.isDrawingMode=!1;var startingPoint,activeRectangle,selectionRect,isDrawing=!1,isSelecting=!1;const ROUND_ALL=!1;var WASM_isReady=!1;canvas.on("mouse:down",function(e){if(isDrawing){let t=canvas.getPointer(e.e);startingPoint={x:t.x,y:t.y},activeRectangle=new fabric.Rect({left:startingPoint.x,top:startingPoint.y,width:0,height:0,fill:"transparent",stroke:"black",strokeWidth:1,selectable:!1}),canvas.add(activeRectangle)}}),canvas.on("mouse:move",function(e){if(!isDrawing||!activeRectangle)return;let t=canvas.getPointer(e.e);activeRectangle.set({width:t.x-startingPoint.x,height:t.y-startingPoint.y}),canvas.renderAll()}),canvas.on("mouse:up",function(){isDrawing&&(normalizeRect(activeRectangle),canvas.renderAll(),activeRectangle.setCoords(),activeRectangle=null)}),document.querySelector("#draw").addEventListener("click",()=>{isDrawing?exitDrawingMode():enterDrawingMode()}),document.querySelector("#select").addEventListener("click",()=>{isDrawing&&exitDrawingMode(),enterSelectionMode()}),document.querySelector("#clear").addEventListener("click",()=>{canvas.clear()}),document.querySelector("#export").addEventListener("click",()=>{!0===test_intersect()&&alert("Please remove the overlapped/out-of-bound rectangles\n");let e=[],t=[];canvas.forEachObject(function(n){"rect"===n.type&&(x=n.left+n.width/2,y=n.top+n.height/2,(n.width<0||n.height<0)&&console.log("negative width or height!"),e.push(x,y,n.width,n.height),t.push(`center x, y, x-width, y-height : ${x.toFixed(2)}, ${y.toFixed(2)}, ${n.width.toFixed(2)}, ${n.height.toFixed(2)}`))});let n=t.join("\n");if(alert("Exported text has been copied to the clipboard.\n"+n),WASM_isReady){console.log(n),console.log(Module.call_get_C_mat),e=[96.5,142,93,114,256,156.5,112,129,202,307,358,88,401.5,177,65,72];let t=new Module.VectorDouble;e.forEach(e=>t.push_back(e)),Module.call_get_C_mat(t)}}),document.addEventListener("keydown",function(e){switch(e.key){case"Delete":if(isSelecting){var t=canvas.getActiveObjects();console.log(t),canvas.selection=!1;for(var n=0,a=t.length;n<a;n++)t[n].selectable=!1,canvas.remove(t[n]);canvas.selection=!0}break;case"Escape":isDrawing&&exitDrawingMode(),updateStatusBar("Idle"),canvas.discardActiveObject().renderAll();break;case"d":isDrawing||enterDrawingMode();break;case"s":isDrawing&&exitDrawingMode(),enterSelectionMode();break;case"a":canvas.setActiveGroup(new fabric.ActiveSelection(canvas.getObjects(),{canvas:canvas})),canvas.requestRenderAll()}});